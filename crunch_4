#!/usr/bin/python3
# -*- coding: utf-8 -*-

# Copyright © 2013 Martin Ueding <dev@martin-ueding.de>
# Licensed under The GNU Public License Version 2 (or later)

import jinja2
import math
import matplotlib.pyplot as pl
import numpy as np
import scipy.optimize as op

def a4_1_1_spannungsverstaerkung(T):
    data = np.genfromtxt("4-1-1-Spannungsverstaerkung.txt")

    RE = data[:,0]
    RC = data[:,1]
    dUB = data[:,2]
    dUE = data[:,3]

    v = dUE / dUB

    T["table411"] = np.column_stack([RE, RC, dUB, dUE, np.round(v, 3)])

def a4_1_2_spannungsverstaerkung(T):
    data = np.genfromtxt("4-1-2-Spannungsverstaerkung.txt")
    print(data)

    RE = data[:, 0]
    RC = data[:, 1]
    dUB = data[:, 2]
    dUC = data[:, 3]

    v = dUC / dUB

    pl.plot(RE[5:], 1/v[5:], linestyle="none", marker="x")
    pl.xlabel(r"$R_\mathrm{E}/\Omega$")
    pl.ylabel(r"$1/v$")
    pl.grid(True)
    pl.savefig("vRE.pdf")
    pl.clf()

    T["table412"] = np.column_stack([RE, RC, dUB, dUC, np.round(v, 3)])

def g(value, error=None, digits=3):
    if error is None:
        return ("{:."+str(digits)+"g}").format(value)
    else:
        value_log = int(math.floor(math.log(np.abs(value), 10)))
        error_log = int(math.floor(math.log(np.abs(error), 10)))

        difference = value_log - error_log
        exp = 0

        if difference >= 0:
            value_dis = value * 10**(difference - value_log)
            error_dis = error * 10**(- error_log)
            exp = error_log
        else:
            value_dis = value * 10**(- value_log)
            error_dis = error * 10**(difference - error_log)
            exp = value_log

        format_string = "{:."+str(digits-1)+"f} +- {:."+str(digits-1)+"f} e{:+d}"
        return format_string.format(value_dis, error_dis, exp)

def render_template(T):
    # Setting up Jinja
    env = jinja2.Environment(
        "%<", ">%",
        "<<", ">>",
        "%§", "§%",
        loader=jinja2.FileSystemLoader(".")
    )
    template4 = env.get_template("Template_4.tex")

    # Rendering LaTeX document with values.
    with open("physik313-4-Ueding_Lemmer.tex", "w") as f:
        f.write(template4.render(**T))

def main():
    T = {}

    a4_1_1_spannungsverstaerkung(T)
    a4_1_2_spannungsverstaerkung(T)
    render_template(T)

if __name__ == "__main__":
    main()
